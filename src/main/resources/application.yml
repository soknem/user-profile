spring:
  main:
    allow-bean-definition-overriding: true
  kafka:
    # General Kafka configurations
    bootstrap-servers: 34.69.50.191:9092

    # Producer configuration
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        schema.registry.url: http://34.69.50.191:8998

    # Consumer configuration
    consumer:
      group-id: security-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        schema.registry.url: http://34.69.50.191:8998
        schema.registry.request.timeout.ms: 10000
        schema.registry.connection.timeout.ms: 10000
        specific-avro-reader: true

    listener:
      missing-topics-fatal: false

  application:
    name: user-profile-service
  profiles:
    active: dev
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://34.69.50.191:9090
  config:
    import: "optional:configserver:"
  cloud:
    config:
      uri: http://config-server:8888
      username: user
      password: password
    stream:
      kafka:
        binder:
          brokers: 34.69.50.191:9092
#      bindings:
#        springCloudBusInput:
#          destination: spring-cloud-bus-topic
#          content-type: application/json
#        springCloudBusOutput:
#          destination: spring-cloud-bus-topic
#          content-type: application/json
    bus:
      trace:
        enabled: true
      refresh:
        enabled: true
      env:
        enabled: true
  jackson:
    date-format: dd/MM/yyyy

management:
  endpoints:
    web:
      exposure:
        include: "*"

  endpoint:
    health:
      show-details: always
    refresh:
      enabled: true

logging:
  level:
    org:
      springframework:
        security: DEBUG
        web: DEBUG

# Eureka client configuration for service discovery.
eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka-server:8761/eureka
#      defaultZone: http://localhost:8761/eureka
    healthcheck:
      enabled: true  # Enable health check for the Eureka client


kafka:
  topic:
    user-register: user-register-event
    user-profile-update: user-update-profile-event
    enable-user-profile: enable-user-profile-event
    disable-user-profile: disable-user-profile-event
  consumer:
    group-id: user-profile-service
  bootstrap-servers: 34.69.50.191:9092
  schema-registry-url: http://34.69.50.191:8998